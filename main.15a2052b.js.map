{"version":3,"sources":["scripts/sortTableByProperty.js","scripts/markSelectedRow.js","scripts/createAddEmployeeForm.js","scripts/notifications.js","scripts/triplify.js","scripts/tableRecords.js","scripts/editCell.js","scripts/main.js"],"names":["sorted","createSortFunction","direction","value1","sortValue","value2","parseFloat","slice","isNaN","parseInt","localeCompare","sortTableByProperty","e","sortHeading","target","table","closest","tableBody","querySelector","sortIndex","querySelectorAll","indexOf","rows","children","map","tr","innerText","element","sortFunc","sort","forEach","insertAdjacentElement","module","exports","markSelectedRow","selectedRow","parentElement","row","classList","add","remove","createNewEmployeeForm","document","body","insertAdjacentHTML","form","lastElementChild","elements","el","dataset","qa","name","notificationsArea","types","success","error","warning","createNotificationsArea","createElement","style","cssText","pushNotification","title","description","type","notification","heading","message","append","setTimeout","create","push","triplify","str","triplifyed","digitsProcessed","i","length","reverse","join","notifications","require","bindToTable","tableReference","checkFormValid","fields","some","f","value","field","age","addRecord","preventDefault","formParent","newRecord","recordColumn","prepend","bindTo","pastValue","applyCellChages","input","cell","newValue","trim","waitForEnter","key","editCell","focus","addEventListener","createAddEmployeeForm","tableRecords","tableHead","headings","buttonAddEmployee","userSelect","th"],"mappings":"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","file":"main.15a2052b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet sorted = null;\n\nfunction createSortFunction(direction) {\n  return function({ sortValue: value1 }, { sortValue: value2 }) {\n    switch (true) {\n      case value1[0] === '$': {\n        const salary1 = parseFloat(value1.slice(1));\n        const salary2 = parseFloat(value2.slice(1));\n\n        return (salary1 - salary2) * direction;\n      }\n\n      case !isNaN(parseInt(value1)): {\n        const age1 = parseInt(value1);\n        const age2 = parseInt(value2);\n\n        return (age1 - age2) * direction;\n      }\n\n      default: {\n        return value1.localeCompare(value2) * direction;\n      }\n    }\n  };\n}\n\nfunction sortTableByProperty(e) {\n  const sortHeading = e.target;\n  const table = sortHeading.closest('table');\n  const tableBody = table.querySelector('tbody');\n  const sortIndex = [...table.querySelectorAll('th')].indexOf(sortHeading);\n  const rows = [...tableBody.children]\n    .map(tr => ({\n      sortValue: tr.children[sortIndex].innerText,\n      element: tr,\n    }));\n\n  const direction = (sortHeading === sorted)\n    ? -1\n    : 1;\n\n  const sortFunc = createSortFunction(direction);\n\n  rows.sort(sortFunc);\n\n  rows.forEach(({ element }) => tableBody\n    .insertAdjacentElement('beforeend', element));\n\n  sorted = (sortHeading === sorted)\n    ? null\n    : sortHeading;\n}\n\nmodule.exports = sortTableByProperty;\n","'use strict';\n\nfunction markSelectedRow(e) {\n  const selectedRow = e.target.closest('tr');\n  const rows = selectedRow.parentElement.children;\n\n  for (const row of rows) {\n    if (row === selectedRow) {\n      row.classList.add('active');\n    } else {\n      row.classList.remove('active');\n    }\n  }\n}\n\nmodule.exports = markSelectedRow;\n","'use strict';\n\nfunction createNewEmployeeForm() {\n  document.body.insertAdjacentHTML('beforeend', `\n    <form class=\"new-employee-form\">\n      <label>\n        Name: <input name=\"name\" type=\"text\" required>\n      </label>\n\n      <label>\n        Position: <input name=\"position\" type=\"text\" required>\n      </label>\n\n      <label>\n        Office:\n        <select name=\"office\" required>\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n\n      <label>\n        Age: <input name=\"age\" type=\"number\" required>\n      </label>\n\n      <label>\n        Salary: <input name=\"salary\" type=\"number\" required>\n      </label>\n\n      <button type=\"submit\">Add to table</button>\n    </form>\n  `);\n\n  const form = document.body.lastElementChild;\n  const elements = [...form.elements].slice(0, -1);\n\n  elements.forEach(el => {\n    el.dataset.qa = el.name;\n  });\n\n  return form;\n}\n\nmodule.exports = createNewEmployeeForm;\n","'use strict';\n\nlet notificationsArea = null;\nconst types = {\n  success: 'success',\n  error: 'error',\n  warning: 'warning',\n};\n\nfunction createNotificationsArea() {\n  notificationsArea = document.createElement('div');\n\n  notificationsArea.style.cssText = `\n    position: fixed;\n    right: 10px;\n    top: 10px;\n\n    display: flex;\n    flex-direction: column-reverse;\n    gap: 10px;\n  `;\n\n  document.body.insertAdjacentElement('beforeend', notificationsArea);\n}\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const heading = document.createElement('h2');\n  const message = document.createElement('p');\n\n  heading.innerText = `${title}:`;\n  message.innerText = description;\n\n  heading.style.cssText = 'margin: 0 0 12px 0;';\n  message.style.cssText = 'margin: 0;';\n\n  notification.append(heading);\n  notification.append(message);\n\n  notification.classList.add('notification');\n  notification.classList.add(type);\n  notification.dataset.qa = 'notification';\n\n  notification.style.cssText = `\n    position: static;\n\n    padding: 12px;\n    min-height: auto;\n  `;\n\n  notificationsArea.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nmodule.exports = {\n  notificationsArea: notificationsArea,\n  types: types,\n  create: createNotificationsArea,\n  push: pushNotification,\n};\n","'use strict';\n\nfunction triplify(str) {\n  const triplifyed = [];\n  let digitsProcessed = 0;\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    triplifyed.push(str[i]);\n    digitsProcessed++;\n\n    if (digitsProcessed % 3 === 0\n      && i !== 0) {\n      triplifyed.push(',');\n    }\n  }\n\n  triplifyed.reverse();\n\n  return triplifyed.join('');\n}\n\nmodule.exports = triplify;\n","'use strict';\n\nconst notifications = require('./notifications');\nconst triplify = require('./triplify');\n\nlet table = null;\n\nfunction bindToTable(tableReference) {\n  table = tableReference;\n\n  notifications.create();\n}\n\nfunction checkFormValid(form) {\n  const fields = [...form.elements].slice(0, -1);\n\n  if (fields.some(f => f.value.length <= 0)) {\n    notifications.push('Empty field',\n      'Fill all empty fields before adding',\n      notifications.types.error);\n\n    return false;\n  }\n\n  for (const field of fields) {\n    switch (field.name) {\n      case 'name': {\n        if (field.value.length < 4) {\n          notifications.push('Wrong name',\n            '\"Name\" field should have at least 4 characters',\n            notifications.types.error);\n\n          return false;\n        }\n\n        break;\n      }\n\n      case 'age': {\n        const age = parseInt(field.value);\n\n        if (age < 18 || age > 90) {\n          notifications.push('Age restriction',\n            'You are out of permissed age bounds',\n            notifications.types.error);\n\n          return false;\n        }\n\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction addRecord(e) {\n  e.preventDefault();\n\n  const formParent = e.target.form;\n\n  if (!checkFormValid(formParent)) {\n    return;\n  }\n\n  const elements = [...formParent.elements].slice(0, -1);\n  const newRecord = document.createElement('tr');\n\n  for (const element of elements) {\n    const recordColumn = document.createElement('td');\n\n    recordColumn.innerText = (element.name === 'salary')\n      ? `$${triplify(element.value)}`\n      : element.value;\n\n    element.value = (element.name === 'office')\n      ? element.value\n      : '';\n\n    newRecord.append(recordColumn);\n  }\n\n  table.prepend(newRecord);\n\n  notifications.push('Employee added',\n    'New employee was added succesfully',\n    notifications.types.success);\n}\n\nmodule.exports = {\n  table: table,\n  bindTo: bindToTable,\n  add: addRecord,\n};\n","'use strict';\n\nlet pastValue = null;\n\nfunction applyCellChages(e) {\n  const input = e.target;\n  const cell = input.closest('td');\n  const newValue = input.value.trim();\n\n  cell.innerText = (newValue.length > 0)\n    ? newValue\n    : pastValue;\n\n  input.remove();\n}\n\nfunction waitForEnter(e) {\n  if (e.key === 'Enter') {\n    applyCellChages(e);\n  }\n}\n\nfunction editCell(e) {\n  const cell = e.target;\n  const input = document.createElement('input');\n\n  pastValue = cell.innerText;\n\n  cell.innerText = '';\n  cell.insertAdjacentElement('beforeend', input);\n\n  input.classList.add('cell-input');\n  input.focus();\n  input.addEventListener('keypress', waitForEnter);\n  input.addEventListener('blur', applyCellChages);\n}\n\nmodule.exports = editCell;\n","'use strict';\n\nconst sortTableByProperty = require('./sortTableByProperty');\nconst markSelectedRow = require('./markSelectedRow');\nconst createAddEmployeeForm = require('./createAddEmployeeForm');\nconst tableRecords = require('./tableRecords');\nconst editCell = require('./editCell');\n\nconst table = document.querySelector('table');\nconst tableHead = table.querySelector('thead');\nconst tableBody = table.querySelector('tbody');\nconst headings = tableHead.querySelectorAll('th');\nconst form = createAddEmployeeForm();\nconst buttonAddEmployee = form.querySelector('button');\n\ntable.style.userSelect = 'none';\n\nheadings.forEach(th => th\n  .addEventListener('click', sortTableByProperty));\n\ntableBody.addEventListener('click', markSelectedRow);\ntableBody.addEventListener('dblclick', editCell);\n\ntableRecords.bindTo(tableBody);\nbuttonAddEmployee.addEventListener('click', tableRecords.add);\n"]}